# Options: slack
platform: slack
# The channel where incident activity is logged
digest_channel: incidents
# Roles defined here will appear as options for each incident
roles:
  incident_commander: "*Role:* Incident Commander leads major incidents, making final decisions and delegating tasks for resolution.\n *Responsibilities:* Listen to calls and monitor Slack for coordination, recruiting others for context. Avoid direct actions, checks, or investigations; delegate these tasks.\n *Strategic Approach:* Constantly plan next steps and backups to avoid operational stalls and ensure progress towards resolution. \n *More Info:* Detailed training available at <https://response.pagerduty.com/training/incident_commander/|PagerDuty's Incident Commander Training>."
  communications_liaison: "*Role:* The Communications Liaison is responsible for customer notifications and relaying customer feedback to the Incident Commander during incidents. \n *Responsibilities:* Listen to calls, monitor the incident Slack room, and track customer support requests. Keep tabs on incident progress, differentiating between ongoing investigation and close to resolution.\n *Notification Process:* The Incident Commander will instruct you to craft and approve customer messages. Disseminate approved messages at various incident stages.\n *More Info:* For detailed training, visit <https://response.pagerduty.com/training/customer_liaison/|Customer Liaison Training>."
# Severities defined here will appear as options for each incident
severities:
  sev1: 'This signifies a critical production scenario that impacts most or all users with a major impact on SLAs. This is an all-hands-on-deck scenario that requires swift action to restore operation. Customers must be notified.'
  sev2: 'This signifies a significant production degradation scenario impacting a large portion of users.'
  sev3: 'This signifies a minor production scenario that may or may not result in degradation. This situation is worth coordination to resolve quickly but does not indicate a critical loss of service for users.'
  sev4: 'This signifies an ongoing investigation. This incident has not been promoted to SEV3 yet, indicating there may be little to no impact, but the situation warrants a closer look. This is diagnostic in nature. This is the default setting for a new incident.'
# Whether or not to deliver incident update reminders for critical incidents
# This will send out a reminder message to an active incident channel at the supplied
# interval
incident_reminders:
  # Any severity in this list will have a scheduled reminder job created
  # This job will remind the channel to send out updates at the interval
  # specified rate below
  qualifying_severities:
    - sev1
  # rate determines how often reminders are sent to an incident channel
  # This is an int and is interpreted as minutes
  rate: 30
# Statuses defined here will appear as options for each incident
statuses:
  - investigating
  - identified
  - monitoring
  - resolved
options:
  # The topic that will be set on all incident channels
  channel_topic:
    default: 'This is the default incident channel topic. You can edit it in settings.'
    # If set to true, set the channel topic to the meeting link. This will override incident_channel_topic.
    set_to_meeting_link: true
  # Timezone to use for logging, etc.
  timezone: UTC
  # If not using Zoom auto-create
  conference_bridge_link: 'https://zoom.us'
  # Allow creation of an incident by reacting to a message
  create_from_reaction:
    # Set to true to enable
    enabled: false
    # The name of the reacji
    # It must exist in your workspace
    reacji: create-incident
  # Automatically invite Slack groups to newly created incidents
  auto_invite_groups:
    # Set to true to enable
    enabled: false
    # List of group names as configured in Slack
    groups:
      - my-slack-group
      - my-other-slack-group
  # Ignore logging for requests from the following user-agents
  skip_logs_for_user_agent:
    # Kubernetes health check user-agent
    - kube-probe
    # AWS ELB health check user-agent
    - ELB-HealthChecker/2.0
integrations:
  # Secret data is provided as environment variables for integrations
  # Only non-secret data is configured here
  atlassian:
    confluence:
      auto_create_rca: true
      space: ENG
      parent: Postmortems
    jira:
      project: SRE
      auto_create_action_item: true
      labels:
        - incident-management
  # Simply provide an empty dict to enable PagerDuty
  pagerduty: {}
  # Enable Statuspage integration
  statuspage:
#    # The public URL of the Statuspage.
    url: https://gooctoplus1.statuspage.io/
#    # Which Slack groups have permissions to manage Statuspage incidents?
#    # If not provided, everyone can manage Statuspage incidents from Slack.
#    # permissions:
#    #   groups:
#    #     - my-slack-gif you've dataroup
#  # Enable Zoom integration
  zoom:
    # Set to true to automatically generate a Zoom meeting for each incident
    auto_create_meeting: true
    # Enable cloud recording or not
    enable_recording: false
  chatgpt:
    # Set to true to automatically improve a RCA for each incident using chat gpt
    auto_improve_rca: true
links:
  incident_guide: https://gooctoplus.atlassian.net/wiki/spaces/ENG/pages/98470/Incident+Guide
  incident_postmortems: https://gooctoplus.atlassian.net/wiki/spaces/ENG/pages/98426/Postmortems
